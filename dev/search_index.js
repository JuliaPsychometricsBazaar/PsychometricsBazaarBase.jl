var documenterSearchIndex = {"docs":
[{"location":"optimizers/#Optimizers","page":"Optimizers","title":"Optimizers","text":"","category":"section"},{"location":"optimizers/","page":"Optimizers","title":"Optimizers","text":"","category":"page"},{"location":"optimizers/","page":"Optimizers","title":"Optimizers","text":"Modules = [PsychometricsBazzarBase.Optimizers]","category":"page"},{"location":"optimizers/#PsychometricsBazzarBase.Optimizers","page":"Optimizers","title":"PsychometricsBazzarBase.Optimizers","text":"This module provides a common interface to different numerical optimization techniques.\n\n\n\n\n\n","category":"module"},{"location":"config_tools/#ConfigTools","page":"ConfigTools","title":"ConfigTools","text":"","category":"section"},{"location":"config_tools/","page":"ConfigTools","title":"ConfigTools","text":"","category":"page"},{"location":"config_tools/","page":"ConfigTools","title":"ConfigTools","text":"Modules = [PsychometricsBazzarBase.ConfigTools]","category":"page"},{"location":"config_tools/#PsychometricsBazzarBase.ConfigTools","page":"ConfigTools","title":"PsychometricsBazzarBase.ConfigTools","text":"This module contains utilities to implement highly configurible library code where configuration is performed through structs, and smart defaults allow sloppy or flat specification of otherwise deeply nested configuration structs.\n\n\n\n\n\n","category":"module"},{"location":"config_tools/#PsychometricsBazzarBase.ConfigTools.@requiresome-Tuple{Any}","page":"ConfigTools","title":"PsychometricsBazzarBase.ConfigTools.@requiresome","text":"This macro is passed an assignment like so\n\n@requiresome foo = bar()\n\nIf bar() returns nothing, then the macro causes the current function to return nothing. Otherwise, execution continues.\n\n\n\n\n\n","category":"macro"},{"location":"config_tools/#PsychometricsBazzarBase.ConfigTools.@returnsome-Tuple{Any}","page":"ConfigTools","title":"PsychometricsBazzarBase.ConfigTools.@returnsome","text":"This macro is passed a value like so\n\n@returnsome foo()\n\nIf foo() return any value apart from nothing, the macro causes the current function to return that value. Otherwise, execution continues.\n\n\n\n\n\n","category":"macro"},{"location":"extra_distributions/#ExtraDistributions","page":"ExtraDistributions","title":"ExtraDistributions","text":"","category":"section"},{"location":"extra_distributions/","page":"ExtraDistributions","title":"ExtraDistributions","text":"","category":"page"},{"location":"extra_distributions/","page":"ExtraDistributions","title":"ExtraDistributions","text":"Modules = [PsychometricsBazzarBase.ExtraDistributions]","category":"page"},{"location":"integral_coeffs/#IntegralCoeffs","page":"IntegralCoeffs","title":"IntegralCoeffs","text":"","category":"section"},{"location":"integral_coeffs/","page":"IntegralCoeffs","title":"IntegralCoeffs","text":"","category":"page"},{"location":"integral_coeffs/","page":"IntegralCoeffs","title":"IntegralCoeffs","text":"Modules = [PsychometricsBazzarBase.IntegralCoeffs]","category":"page"},{"location":"integral_coeffs/#PsychometricsBazzarBase.IntegralCoeffs","page":"IntegralCoeffs","title":"PsychometricsBazzarBase.IntegralCoeffs","text":"These are helpers for weighting integrals of p.d.f.s for calculating basic stats.\n\nThe main idea of doing it this way is to have a single instance of these to reuse specializations and to use structs so as to be able to control the level of specialization.\n\n\n\n\n\n","category":"module"},{"location":"#PsychometricsBazzarBase.jl","page":"PsychometricsBazzarBase.jl","title":"PsychometricsBazzarBase.jl","text":"","category":"section"},{"location":"","page":"PsychometricsBazzarBase.jl","title":"PsychometricsBazzarBase.jl","text":"This module provides a base for the libraries in the JuliaPsychometricsBazzar org. It contains abstractions over basic mathematical techniques such as numerical integration, optimization and interpolation.","category":"page"},{"location":"","page":"PsychometricsBazzarBase.jl","title":"PsychometricsBazzarBase.jl","text":"Ideally, the package will be transitional, since functionality may make its way into more specific packages (including existing packages) over time.","category":"page"},{"location":"","page":"PsychometricsBazzarBase.jl","title":"PsychometricsBazzarBase.jl","text":"CurrentModule = PsychometricsBazzarBase","category":"page"},{"location":"","page":"PsychometricsBazzarBase.jl","title":"PsychometricsBazzarBase.jl","text":"Modules = [PsychometricsBazzarBase]","category":"page"},{"location":"#Index","page":"PsychometricsBazzarBase.jl","title":"Index","text":"","category":"section"},{"location":"","page":"PsychometricsBazzarBase.jl","title":"PsychometricsBazzarBase.jl","text":"","category":"page"},{"location":"integrators/#Integrators","page":"Integrators","title":"Integrators","text":"","category":"section"},{"location":"integrators/","page":"Integrators","title":"Integrators","text":"","category":"page"},{"location":"integrators/","page":"Integrators","title":"Integrators","text":"Modules = [PsychometricsBazzarBase.Integrators]","category":"page"},{"location":"integrators/#PsychometricsBazzarBase.Integrators","page":"Integrators","title":"PsychometricsBazzarBase.Integrators","text":"This module provides a common interface to different numerical integration techniques.\n\n\n\n\n\n","category":"module"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.BareIntegrationResult","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.BareIntegrationResult","text":"The result of an integration technique which provides no error value.\n\n\n\n\n\n","category":"type"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.CubaCuhre","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.CubaCuhre","text":"The Cuhre algorithm.\n\n\n\n\n\n","category":"type"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.CubaDivonne","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.CubaDivonne","text":"The Divonne algorithm.\n\n\n\n\n\n","category":"type"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.CubaIntegrator","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.CubaIntegrator","text":"CubaIntegrator is a wrapper around the Cuba.jl integration functions.\n\nUsage example:\n\njulia CubaIntegrator([0.0, 0.0], [1.0, 1.0], CubaVegas()) do x     x[1] * x[2] end`\n\n\n\n\n\n","category":"type"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.CubaIntegrator-Union{Tuple{F}, Tuple{F, Any}, Tuple{F, Any, Any}, Tuple{F, Any, Any, Any}} where F","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.CubaIntegrator","text":"Perform a Cuba integration.\n\n\n\n\n\n","category":"method"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.CubaSuave","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.CubaSuave","text":"The Sauve algorithm.\n\n\n\n\n\n","category":"type"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.CubaVegas","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.CubaVegas","text":"The VEGAS algorithm.\n\n\n\n\n\n","category":"type"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.CubatureIntegrator","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.CubatureIntegrator","text":"Construct a Cubature integrator based on Cubature.jl with on a specified interval.\n\n\n\n\n\n","category":"type"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.CubatureIntegrator-Union{Tuple{F}, Tuple{F, Any}, Tuple{F, Any, Any}, Tuple{F, Any, Any, Any}} where F","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.CubatureIntegrator","text":"Perform a Cubature integration based on Cubature.jl.\n\n\n\n\n\n","category":"method"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.ErrorIntegrationResult","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.ErrorIntegrationResult","text":"The result of an integration technique which provides an error value. Note that error values are not comparible between different integration techniques in general.\n\n\n\n\n\n","category":"type"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.FixedGKIntegrator","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.FixedGKIntegrator","text":"Construct a fixed-order Gauss-Kronrod integrator based on QuadGK.jl with on a specified interval.\n\n\n\n\n\n","category":"type"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.FixedGKIntegrator-Union{Tuple{F}, Tuple{F, Any}, Tuple{F, Any, Any}, Tuple{F, Any, Any, Any}} where F","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.FixedGKIntegrator","text":"Perform a fixed-order Gauss-Kronrod integration based on QuadGK.jl.\n\n\n\n\n\n","category":"method"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.HCubatureIntegrator","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.HCubatureIntegrator","text":"Construct a Cubature integrator based on HCubature.jl with on a specified interval.\n\n\n\n\n\n","category":"type"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.HCubatureIntegrator-Tuple{F} where F","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.HCubatureIntegrator","text":"Perform Cubature integration based on HCubature.jl.\n\n\n\n\n\n","category":"method"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.MCIVegasIntegrator","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.MCIVegasIntegrator","text":"Construct a VEGAS integrator based on MonteCarloIntegration.jl with on a specified interval.\n\n\n\n\n\n","category":"type"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.MCIVegasIntegrator-Tuple{F} where F","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.MCIVegasIntegrator","text":"Perform a VEGAS integration based on MonteCarloIntegration.jl.\n\n\n\n\n\n","category":"method"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.MultiDimFixedGKIntegrator","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.MultiDimFixedGKIntegrator","text":"Construct a fixed-order multi-dimensional Gauss-Kronrod integrator based on QuadGK.jl with on a specified interval.\n\n\n\n\n\n","category":"type"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.MultiDimFixedGKIntegrator-Union{Tuple{F}, Tuple{F, Any}, Tuple{F, Any, Any}, Tuple{F, Any, Any, Any}} where F","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.MultiDimFixedGKIntegrator","text":"Perform a fixed-order multi-dimensional Gauss-Kronrod integrator based on QuadGK.jl.\n\n\n\n\n\n","category":"method"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.QuadGKIntegrator","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.QuadGKIntegrator","text":"Construct a adaptive Gauss-Kronrod integrator based on QuadGK.jl with on a specified interval.\n\n\n\n\n\n","category":"type"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.QuadGKIntegrator-Union{Tuple{F}, Tuple{F, Any}, Tuple{F, Any, Any}, Tuple{F, Any, Any, Any}} where F","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.QuadGKIntegrator","text":"Perform an adaptive Gauss-Kronrod integration using QuadGK.jl.\n\n\n\n\n\n","category":"method"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.interr","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.interr","text":"Given any integration result, get the integral error. In case the integration technique does not supply one, this returns nothing.\n\n\n\n\n\n","category":"function"},{"location":"integrators/#PsychometricsBazzarBase.Integrators.intval-Tuple{Union{PsychometricsBazzarBase.Integrators.BareIntegrationResult, PsychometricsBazzarBase.Integrators.ErrorIntegrationResult}}","page":"Integrators","title":"PsychometricsBazzarBase.Integrators.intval","text":"Given any integration result, get the integral value.\n\n\n\n\n\n","category":"method"}]
}
